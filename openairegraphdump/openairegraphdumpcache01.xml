<?xml version="1.0" encoding="utf-8"?>
<document>
    <sqltemplate>
        <sql>
            <statement id = "PrimarySQL">
                <fragment id="sel_base" target="select" enable="always">r.id, r.dateofcollection, r.publisher, r.journal, r.bestaccessrights, r.language, r.dateofacceptance, r.embargoenddate, r.type, rl.titles, rl.authors, rl.descriptions, rl.projects</fragment>	
				<fragment id="from_result" target="from" enable="always">r</fragment>
				<fragment id="from_resulttitle" target="from" enable="always">LEFT JOIN rl ON r.id = rl.id</fragment>
              
			   <fragment id="where_eq_type" target="where" enable="all">r.type = 'publication'</fragment>
			   
                 <!-- <fragment id="where_qa_df" target="where" conditionals="cond_datefrom" enable="all">r.dateofcollection &gt;= cast('@{[cr_datefrom]}' as date)</fragment>
                <fragment id="where_qa_dt" target="where" conditionals="cond_dateto" enable="all">r.dateofcollection &lt;= cast('@{[cr_dateto]}' as date)</fragment>-->
         
            </statement>
        </sql>
    </sqltemplate>
    <args>
		     <!-- <arg id="cr_datefrom" type="date" validation="fullDate" overridable="true" />
		    <arg id="cr_dateto" type="date" validation="fullDate" overridable="true" />-->
			<arg id="fs" type="text" overridable="true" />
			<arg id="src" type="text" overridable="true"  />
			<arg id="dest" type="text" overridable="true"  />
    </args>
    <conditionals>
           <!-- <conditional id="cond_datefrom" test="exists" type="text">@{[cr_datefrom]}</conditional>
			<conditional id="cond_dateto" test="exists" type="text">@{[cr_dateto]}</conditional>
            <conditional id="cond_publishers" test="exists" type="text">@{[cr_publisherlist]}</conditional>
            <conditional id="cond_journals" test="exists" type="text">@{[cr_journallist]}</conditional>
            <conditional id="cond_projects" test="exists" type="text">@{[cr_projectlist]}</conditional>
            <conditional id="cond_funders" test="exists" type="text">@{[cr_funderlist]}</conditional>-->
    </conditionals>
    <extenders>
    </extenders>
    <datasources>
        <datasource id="csv1" name="MyDataset" datatype="com.citesa.intelcomp.cataloguehelper.datasettypes.GenericFileFolderBasedDataset" storetype="com.citesa.spark.sqlcomposer.source.FileSource" format="parquet" >
            <location>@{[fs]}@{[src]}</location>
            <defaultlocation></defaultlocation>
            <options>
            </options>
            <entities>
                <entity id="result" name="result" alias="r" tAlias ="tmp_R" format="parquet" conditionals="">
                    <content></content>
                    <location>result</location>
                    <defaultlocation></defaultlocation>
                   
                    <options>
                        <option name="multiLine" value="true" type="bool" />
                        <option name="mode" value="PERMISSIVE" type="text" />
                        <option name="wholeFile" value="true" type="text" />
                        <option name="delimiter" value="," type="text" />
                        <option name="header" value="true" type="text" />
                        <option name="enforceSchema" value="false" type="text" />
                        <option name="unescapedQuoteHandling" value="STOP_AT_CLOSING_QUOTE" type="text" />
                        <option name="mode" value="DROPMALFORMED" type="text" />
                    </options>
               
                </entity>
                <entity id="result_titles" name="result_titles" alias="rt" tAlias ="tmp_rt" format="parquet" conditionals="">
				<content></content>
                    <location>result_titles</location>
			
                </entity>			
                <entity id="result_description" name="result_description" alias="rd" tAlias ="tmp_rd" format="parquet" conditionals="">
                    <content></content>
					<location>result_description</location>
			
                </entity>	
                <entity id="result_author" name="result_author" alias="ra" tAlias ="tmp_ra" format="parquet" conditionals="">
					<content>SELECT id,fullname FROM tmp_ra</content>
                    <location>result_author</location>
			
                </entity>
                <entity id="result_project" name="result_project" alias="rp" tAlias ="tmp_rp" format="parquet" conditionals="">
				<content></content>
                    <location>result_project</location>
			
                </entity>			
                <entity id="project" name="project" alias="prj" tAlias ="tmp_prj" format="parquet" conditionals="">
				<content>SELECT id,title,acronym,code FROM tmp_prj</content>
                    <location>project</location>
				
                </entity>	
				
                <entity id="result_prj" name="result_prj" alias="rprj" tAlias ="tmp_rprj" format="view" conditionals="">
					<content>SELECT /*+ BROADCAST(rp) */ rp.id , prj.title, prj.acronym, prj.code  FROM rp 
					LEFT JOIN prj ON rp.project = prj.id</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>					
                <entity id="result_rlt" name="result_rlt" alias="rlt" tAlias ="tmp_rlt" format="view" conditionals="">
					<content>SELECT rt.id, collect_list(rt.title) as titles FROM rt GROUP BY rt.id</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>	
				<entity id="result_rla" name="result_rla" alias="rla" tAlias ="tmp_rla" format="view" conditionals="">
					<content>SELECT ra.id, collect_list(ra.fullname) as authors FROM ra GROUP BY ra.id</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>	
				<entity id="result_rlprj" name="result_rlprj" alias="rlprj" tAlias ="tmp_rlprj" format="view" conditionals="">
					<content>SELECT rprj.id, rprj.acronym, rprj.code, collect_list(rprj.title) as projects FROM rprj GROUP BY rprj.id, rprj.acronym, rprj.code</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>	
				<entity id="result_rld" name="result_rld" alias="rld" tAlias ="tmp_rld" format="view" conditionals="">
					<content>SELECT rd.id, collect_list(rd.description) as descriptions FROM rd GROUP BY rd.id</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>	
				<entity id="result_rl" name="result_rl" alias="rl" tAlias ="tmp_rl" format="view" conditionals="">
					<content>SELECT /*+ BROADCAST(r) */ r.id,rlt.titles,rla.authors, rld.descriptions, rlprj.projects, rlprj.acronym, rlprj.code FROM r 
					LEFT JOIN rlt ON r.id = rlt.id 
					LEFT JOIN rla ON r.id = rla.id  
					LEFT JOIN rld ON r.id = rld.id
					LEFT JOIN rlprj ON r.id = rlprj.id</content>
					<cacheable  level="DISK_ONLY_2"/>
                </entity>					
            </entities>
        </datasource>
    </datasources>
    <datasinks>
        <datasink id="out" name="MyOut" datatype="openairegraph.pubs.01"
                  storetype="com.citesa.spark.sqlcomposer.sink.FileSink"
                  format="json" conditionals="" sql="PrimarySQL">
            <location>@{[fs]}@{[dest]}</location>
            <defaultlocation></defaultlocation>
            <parameters>
            <!--
				<parameter name="singleFile" value="true" type="bool" />
            -->
            </parameters>
            <options>
            </options>

        </datasink>
    </datasinks>
    <executionOptions>
        <executionOption name="stdOutSql" value="false" type="bool" />
        <executionOption name="explain" value="false" type="bool" />
    </executionOptions>
</document>